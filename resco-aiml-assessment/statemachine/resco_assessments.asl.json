{
    "Comment": "A state machine that performs ReSCO assessments.",
    "StartAt": "Cleanup S3 Bucket",
    "States": {
        "Cleanup S3 Bucket": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "Retry": [
                {
                    "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException",
                        "Lambda.TooManyRequestsException"
                    ],
                    "IntervalSeconds": 1,
                    "MaxAttempts": 3,
                    "BackoffRate": 2,
                    "JitterStrategy": "FULL"
                }
            ],
            "Next": "IAM Permission Caching",
            "QueryLanguage": "JSONata",
            "Arguments": {
                "FunctionName": "${CleanupBucketFunction}",
                "Payload": "{% $states.context %}"
            }
        },
        "IAM Permission Caching": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "Retry": [
                {
                    "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException",
                        "Lambda.TooManyRequestsException"
                    ],
                    "IntervalSeconds": 1,
                    "MaxAttempts": 3,
                    "BackoffRate": 2,
                    "JitterStrategy": "FULL"
                }
            ],
            "Next": "Run Security Assessments",
            "QueryLanguage": "JSONata",
            "Arguments": {
                "FunctionName": "${IAMPermissionCachingFunction}",
                "Payload": "{% $states.context %}"
            }
        },
        "Run Security Assessments": {
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "Bedrock Security Assessment",
                    "States": {
                        "Bedrock Security Assessment": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::lambda:invoke",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "Lambda.ServiceException",
                                        "Lambda.AWSLambdaException",
                                        "Lambda.SdkClientException",
                                        "Lambda.TooManyRequestsException"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 3,
                                    "BackoffRate": 2,
                                    "JitterStrategy": "FULL"
                                }
                            ],
                            "End": true,
                            "QueryLanguage": "JSONata",
                            "Arguments": {
                                "FunctionName": "${BedrockSecurityAssessmentFunction}",
                                "Payload": "{% $states.context %}"
                            }
                        }
                    }
                },
                {
                    "StartAt": "Sagemaker Security Assessment",
                    "States": {
                        "Sagemaker Security Assessment": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::lambda:invoke",
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "Lambda.ServiceException",
                                        "Lambda.AWSLambdaException",
                                        "Lambda.SdkClientException",
                                        "Lambda.TooManyRequestsException"
                                    ],
                                    "IntervalSeconds": 1,
                                    "MaxAttempts": 3,
                                    "BackoffRate": 2,
                                    "JitterStrategy": "FULL"
                                }
                            ],
                            "End": true,
                            "QueryLanguage": "JSONata",
                            "Arguments": {
                                "FunctionName": "${SagemakerSecurityAssessmentFunction}",
                                "Payload": "{% $states.context %}"
                            }
                        }
                    }
                }
            ],
            "QueryLanguage": "JSONata",
            "Next": "Generate Consolidated Report"
        },
        "Generate Consolidated Report": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "Retry": [
                {
                    "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException",
                        "Lambda.TooManyRequestsException"
                    ],
                    "IntervalSeconds": 1,
                    "MaxAttempts": 3,
                    "BackoffRate": 2,
                    "JitterStrategy": "FULL"
                }
            ],
            "End": true,
            "QueryLanguage": "JSONata",
            "Arguments": {
                "FunctionName": "${GenerateConsolidatedReportFunction}",
                "Payload": {
                    "Execution": "{% $states.context.Execution %}",
                    "accountId": "{% $split($states.context.Execution.RoleArn, ':')[4] %}"
                }
            }
        }
    }
}